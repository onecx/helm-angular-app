global:
  #Inject config maps
  inject_maps: []

  routing:
    type:

  # global operator values
  operator:
    keycloak:
      realm:

  # node selector for the pods
  nodeSelector:

  # tolerations for the pods
  tolerations:
  
# Name of the instance, default {{ .Release.Name }}-{{ .Values.name | default .Chart.Name }}
name:
# ID of the application instance, default
appId:

# Application image
image:
  # Docker registry
  registry: "ghcr.io"
  # Docker repository (application name)
  repository: "change-me"
  # Docker image tag (application version)
  tag: "master"
  # pull policy Always | IfNotPresent | Never
  pull: IfNotPresent

# Image pull secrets
imagePullSecrets: 

# health check configuration
livenessProbe:
  url: /healthcheck

# rediness proble configuration
readinessProbe:
  url: /healthcheck

# start up probe configuration
startupProbe:
  url: /healthcheck

# node selector for the pods
nodeSelector:

# tolerations for the pods
tolerations:

# pod
pod:
  port: 8080

# service
service:
  port: 8080

# Route
routing:
  # Enable or disable route
  enabled: false
  
  # Default URL
  default_url: "change.com"
  
  # path
  path:
  
  # host name
  hostName:

  # traefik | ingress
  type: none

  traefik:
    # middleware
    middleware:
      # middleware for treafik
      enabled: false
      # traefik middleware name
      name: 

  # custom service name and port for the routing
  service:
     # custom service name only for routing
    name:
     # custom service port only for routing
    port:

# Replicas
replicas: 1

# custom service account
serviceAccount:
  # enable custom service accoung
  enabled: false
  # generate custom name <app-name>.<suffix>
  suffix:  
  # fix name of the service account
  name: 

# Inject config maps
inject_maps: []

# Custom env variables as YAML structure
envCustom: 

# Kubernetes operator configuration
operator:
  # permissions
  permission:
    # enable or disable configuration for operator
    enabled: false

    spec:
      # default release name (product name)
      productName:
      # default deployment name (release_name-name)
      appId:
      # application name (release_name-name)
      name:
      # application description (release_name-name)
      description:      
      # map of permissions
      # resource:
      #    action: description
      permissions:

  # microfrontend
  microfrontend:
    # enable or disable configuration for operator
    enabled: false

    # default remote entry path suffix
    entrySuffix: remoteEntry.js

    # definnition
    spec:
            
      description: change-me
      
      exposedModule: change-me
      
      iconName:
      note: change-me
      remoteName:
      tagName:

      # list of strings
      classifications: []      

      # list of name and path
      # - name:
      #   path:
      endpoints:

      # technology is free text
      technology: ANGULAR

      # contact email
      contact: onecx@1000kit.org

      # default is app.routing.path
      remoteBaseUrl:
      
      # default is app.routing.path + entrySuffix
      remoteEntry:

      # default release name (product name)
      productName:      
      
      # default deployment name (release_name-name or appId)
      appId:

      # default deployment name (release_name-name)
      appName:

  # Keycloak operator
  keycloak:
    # Keycloak client operator
    client:
      # enabled or disable config for operator
      enabled: false
      # definition
      spec:
        # keycloak realm where the client has to be created
        realm:
        # type of client. Current possibilities [ ui | machine ]
        type: ui
        # Configuration for the keycloak client
        kcConfig:
          # default deployment name (release_name-name)
          clientId:
          # description for the client
          description:
          # flag to enable/disable client in keycloak
          enabled:
          # client authenticator type (client-secret)
          clientAuthenticatorType:
          # Redirect uris (used for the ui client). List of Strings
          redirectUris: []
          # Web origins (user for the ui client). List of Strings
          webOrigins: []
          # Bearer only flag
          bearerOnly:
          # Standard flow enabled flag
          standardFlowEnabled:
          # Implicit flow enabled flag
          implicitFlowEnabled:
          # Direct access grants enable flag
          directAccessGrantsEnabled:
          # Service accounts enabled flag
          serviceAccountsEnabled:
          # Public client flag
          publicClient:
          # Protocol (openid-connect)
          protocol:
          # List of string scopes to be added as default
          defaultClientScopes: []
          # List of string scopes to be added as optional
          optionalClientScopes: []
          # Map of custom attributes
          attributes:
            #key1: value1
            #key2: value2
